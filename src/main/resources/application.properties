server.port=8082

spring.datasource.url=jdbc:mysql://localhost:3306/devdb
spring.datasource.username=root
spring.datasource.password=admin@123

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

spring.application.name=inventory-service

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.bootstrap-servers= localhost:9092
spring.kafka.consumer.auto-offset-reset= earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=  org.apache.kafka.common.serialization.StringDeserializer
#  org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*


# Topic and Group ID for consuming from the UserOrder topic
spring.kafka.consumer.group-id.topic1=UserOrderGroup
spring.kafka.topic.name.topic1=UserOrder

# Producer/Topic for the Inventory Availability
spring.kafka.topic.name.topic2=OrderFulfillment

# Producer/Topic for the Supplier and adding to the stock
spring.kafka.topic.name.topic3=ExternalOrder

# Topic and Group ID for consuming from the UserOrder topic
spring.kafka.consumer.group-id.topic4=StockUpdateGroup
spring.kafka.topic.name.topic4=StockUpdate